// written by Joseph

import("Syntax.ShellStyle");
import("Type.Json");

String host = "";
String nameserver = "";
String gateway = "";

boolean Evidences(Json ctx) {
	boolean ret = true;
	host = ctx.getString("hostname");
	String result = $(minikonoha Connection.ds);
	System.p(result);

	result = $(minikonoha FirewallOutput.ds);
	System.p(result);

	result = $(minikonoha FirewallInput.ds);
	System.p(result);

	result = $(minikonoha CheckDNS.ds);
	System.p(result);

	if (result.search("true") > 0) {
//		result = $(minikonoha PingDNS.ds);//TODO can't get correct result
//		System.p(result);
		String resolv = $(cat "/etc/resolv.conf" | grep "nameserver");
		if (resolv.search("nameserver") == -1) {
			result = "(PingDNS.ds)false";
		} else {
			nameserver = resolv.split(" ").get(1);
			ping "${nameserver}" -c 2 > /dev/null;
			if ($? == 0) {
				result = "(PingDNS.ds)true";
			} else {
				result = "(PingDNS.ds)false";
			}
		}
		System.p(result);
	}

	result = $(minikonoha CheckHostOrIP.ds "${host}");
	System.p(result);

	if (result.search("Hostname") > 0) {
		result = $(minikonoha Nslookup.ds "${host}");
		System.p(result);
	}

	result = $(minikonoha RoutingDirectly.ds);
	System.p(result);

	result = $(minikonoha RoutingDefault.ds);
	System.p(result);

	result = $(minikonoha RecognitionGW.ds);
	System.p(result);

	if (result.search("true") > 0) {
//		result = $(minikonoha PingGW.ds);
//		System.p(result);
		String str = $(ip route show | grep "default");
		gateway = str.substring(str.search("192"), str.search("dev"));
		ping "${gateway}" -c 2 > /dev/null;
		if ($? == 0) {
			result = "(PingGW.ds)true";
		} else {
			result = "(PingGW.ds)false";
		}
		System.p(result);
	}

	result = $(minikonoha Ping.ds "{host}");
	System.p(result);
	ping "${host}" -c 8 > /dev/null;
	System.p($?);
	if ($? == 0) {//Success
		System.p("Success:Network path to the server is connected");
		return true;

	} else if ($? == 1) {
		String res = $(ping "${host}" -c 2);

		if (res.search("Destination Host Unreachable") != -1) {//Network involving the host is found, but the host is not found.
			String LAN = $(minikonoha IPCheck.ds "${host}");
			if (LAN.search("inside") > 0) {
				System.p("ExternalFault:${host} is in LAN and not found.");
				return false;
			}
			System.p("ExternalFault:${host} is out of LAN and not found.");
			return false;
			return false;
		} else if (res.search("Destination Net Unreachable") != -1) {//Network is not found.
			System.p("SystemFault:Dafault gateway setting is wrong.");
			String default_gateway = $(ip route show | grep "UG");
			System.p("SystemFault:" + default_gateway + ". This gateway is not working.");
			return false;
		} else if (res.search("Operation not permitted") != -1) {//firewall doesn't allow ping.
			System.p("SystemFault:Your firewall doesn't allow ping.");
			return false;
		} else if (res.search("Time to live exceeded") != -1) {//TTL is set too little
			System.p("ExternalFault:It's too far to the server.");
			return false;
		} else if (res.search("100% packet loss") != -1) {
//		else if (res.search("Request timed out") != -1)
			String lookup = $(minikonoha Nslookup.ds "${host}");
			if (lookup.search("false") != -1) {
				System.p("ExternalFault:Server doesn't respond. The server doesn't allow ping.");
				return false;
			}
			String retry = $(minikonoha Retry.ds "${host}");
			System.p("SystemFault:Check your firewall setting");
			System.p("ExternalFault:Server doesn't respond. The server doesn't allow ping.");

			return ret;
		}
	} else if ($? == 2) {//Errors. can't ping. "Unknow host", "Network is unreachable"
		String lookup = $(minikonoha Nslookup.ds "${host}");
		if (lookup.search("false") == -1) {//"Unknown host"
			System.p("SystemFault:Network is unreachable.");
			return false;
		}
		System.p("SystemFault:name resolution faild.");
		return false;
	}
}

void main() {
	Json ctx = new Json();
//	ctx.setString("hostname", "www.google.com");
//	ctx.setString("hostname", "192.168.122.179");
	ctx.setString("hostname", SCRIPT_ARGV.get(1));
	Evidences(ctx);
}

main();
